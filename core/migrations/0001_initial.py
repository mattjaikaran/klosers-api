# Generated by Django 4.2.3 on 2024-01-15 17:52

import core.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="CustomUser",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        error_messages={
                            "unique": "A user with that email already exists"
                        },
                        max_length=254,
                        unique=True,
                    ),
                ),
                ("username", models.CharField(max_length=150, unique=True)),
                (
                    "first_name",
                    models.CharField(max_length=50, verbose_name="First Name"),
                ),
                (
                    "last_name",
                    models.CharField(max_length=50, verbose_name="Last Name"),
                ),
                ("img_url", models.URLField(blank=True, null=True)),
                ("title", models.CharField(blank=True, max_length=100)),
                ("company", models.CharField(blank=True, max_length=100)),
                (
                    "profile_visibility",
                    models.CharField(
                        choices=[("PUBLIC", "Public"), ("PRIVATE", "Private")],
                        default="PUBLIC",
                        max_length=10,
                    ),
                ),
                ("market_type", models.CharField(max_length=100, null=True)),
                (
                    "all_time_revenue",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                ("linkedin_profile", models.URLField(blank=True, null=True)),
                ("user_fit_score", models.IntegerField(default=0)),
                (
                    "user_status",
                    models.CharField(
                        choices=[
                            ("Open to New Opportunities", "Open to New Opportunities"),
                            (
                                "Actively Looking for New Role",
                                "Actively Looking for New Role",
                            ),
                            ("Will Take the Call", "Will Take the Call"),
                            (
                                "Not Interested in New Opportunities",
                                "Not Interested in New Opportunities",
                            ),
                        ],
                        default="Open to New Opportunities",
                        max_length=50,
                    ),
                ),
                ("is_sales_rep", models.BooleanField(default=True)),
                ("is_company", models.BooleanField(default=False)),
                ("leaderboard_access", models.BooleanField(default=False)),
                ("about", models.TextField(blank=True, max_length=512)),
                (
                    "is_admin",
                    models.BooleanField(
                        default=False,
                        help_text="Gives Users access to the Admin Dashboard to view all properties and all projects on the site.",
                        verbose_name="admin",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into Django Admin.",
                        verbose_name="staff",
                    ),
                ),
                ("is_superuser", models.BooleanField(default=False)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
            ],
            options={
                "verbose_name": "User",
                "verbose_name_plural": "Users",
                "ordering": ["email"],
                "permissions": (("can_access_settings", "Can access settings"),),
            },
            managers=[
                ("objects", core.models.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name="ContactSupport",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("datetime_created", models.DateTimeField(auto_now_add=True)),
                ("last_edited", models.DateTimeField(auto_now=True)),
                ("is_removed", models.BooleanField(default=False)),
                ("email", models.EmailField(max_length=254)),
                ("description", models.TextField(max_length=1500)),
            ],
            options={
                "verbose_name_plural": "Support Messages",
                "ordering": ["-datetime_created"],
            },
        ),
        migrations.CreateModel(
            name="Reference",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("datetime_created", models.DateTimeField(auto_now_add=True)),
                ("last_edited", models.DateTimeField(auto_now=True)),
                ("is_removed", models.BooleanField(default=False)),
                (
                    "first_name",
                    models.CharField(max_length=50, verbose_name="First Name"),
                ),
                (
                    "last_name",
                    models.CharField(max_length=50, verbose_name="Last Name"),
                ),
                ("email", models.EmailField(max_length=100)),
                ("phone", models.CharField(blank=True, max_length=20)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Intro",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("datetime_created", models.DateTimeField(auto_now_add=True)),
                ("last_edited", models.DateTimeField(auto_now=True)),
                ("is_removed", models.BooleanField(default=False)),
                ("message", models.TextField(blank=True, max_length=512)),
                ("accepted", models.BooleanField(default=False)),
                ("declined", models.BooleanField(default=False)),
                ("accepted_date", models.DateTimeField(blank=True, null=True)),
                ("declined_date", models.DateTimeField(blank=True, null=True)),
                (
                    "user_from",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_intros",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user_to",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_to_intros",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="customuser",
            name="intros",
            field=models.ManyToManyField(blank=True, to="core.intro"),
        ),
        migrations.AddField(
            model_name="customuser",
            name="references",
            field=models.ManyToManyField(blank=True, to="core.reference"),
        ),
        migrations.AddField(
            model_name="customuser",
            name="user_permissions",
            field=models.ManyToManyField(
                blank=True,
                help_text="Specific permissions for this user.",
                related_name="user_set",
                related_query_name="user",
                to="auth.permission",
                verbose_name="user permissions",
            ),
        ),
    ]
